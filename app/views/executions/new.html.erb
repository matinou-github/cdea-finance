<div class="container">
  <h2 class="text-center my-4">Nouvelle execution</h2>

  <div class="card shadow-sm">
    <div class="card-body">
      <%= form_with(model: @execution, local: true, class: "needs-validation") do |form| %>
  <% if @execution.errors.any? %>
  <div class="alert alert-danger">
    <ul>
      <% @execution.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>
        <div class="mb-3">
          <%= form.label :service_request_id, "Demande de Service", class: "form-label" %>
        
          <%= form.select :service_request_id, 
                     options_for_select(@demandes_validees&.map { |h| [h.id, h.id] } || []), 
                      { prompt: "-- Sélectionnez une demande --" }, 
                      { class: "form-select shadow-sm select-beast", id: "service_request_select"  } %>
        </div>

        <div class="mb-3">
          <%= form.label :superficie, "Superficie Labourée (Ha)", class: "form-label" %>
          <%= form.number_field :superficie, step: 0.01, class: "form-control", id: "superficie_field"  %>
        </div>

  <div id="machines-container">
          <%= form.fields_for :machines do |machine_form| %>
            <%= render "machine_fields", f: machine_form %>
          <% end %>
        </div>

        <a href="#" id="add-machine" class="btn btn-secondary">Ajouter un tracteur</a>
        <template id="machine-template">
          <%= form.fields_for :machines, Machine.new, child_index: "NEW_RECORD" do |machine_form| %>
            <%= render "machine_fields", f: machine_form %>
          <% end %>
        </template>
       
        <div class="mb-3">
          <%= form.label :year, "Année campagne", class: "form-label" %>
           <%= form.text_field :year, value: Date.today.year, class: "form-control", readonly: true %>
        </div>

        <div class="d-flex justify-content-between">
          <%= link_to 'Retour', executions_path, class: "btn btn-secondary" %>
          <%= form.submit "Créer", class: "btn btn-primary" %>
        </div>
      <% end %>
      </div>
  </div>
</div>

<%= javascript_include_tag 'tom_select'%> 

<script>
document.addEventListener("DOMContentLoaded", () => {
  const addMachineButton = document.getElementById("add-machine");
  const machinesContainer = document.getElementById("machines-container");
  const machineTemplate = document.getElementById("machine-template");

  if (addMachineButton && machineTemplate) {
    addMachineButton.addEventListener("click", (e) => {
      e.preventDefault();

      const newMachineFields = machineTemplate.innerHTML.replace(/NEW_RECORD/g, new Date().getTime());
      machinesContainer.insertAdjacentHTML("beforeend", newMachineFields);
    });
  }

  machinesContainer.addEventListener("click", (e) => {
    if (e.target.classList.contains("remove-machine")) {
      e.preventDefault();

      const fieldset = e.target.closest(".machine-fields");
      if (fieldset) {
        const destroyFlag = fieldset.querySelector(".destroy-flag");
        if (destroyFlag) {
          destroyFlag.value = "1";
          fieldset.style.display = "none";
        } else {
          fieldset.remove();
        }
      }
    }
  });
});


</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
  const serviceRequestSelect = document.getElementById("service_request_select");
  const superficieField = document.getElementById("superficie_field");

  serviceRequestSelect.addEventListener("change", function () {
    const selectedId = this.value;
    console.log("ID sélectionné :", selectedId); // Vérifie l'ID sélectionné

    if (selectedId) {
      fetch(`/service_requests/${selectedId}`, {
        headers: {
          "Accept": "application/json", // Indique au serveur que vous attendez une réponse JSON
        },
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Erreur réseau ou serveur");
          }
          return response.json();
        })
        .then((data) => {
          console.log("Données reçues :", data); // Affiche les données reçues
          if (data.superficie) {
            superficieField.value = data.superficie;
          }
        })
        .catch((error) => {
          console.error("Erreur AJAX :", error);
        });
    } else {
      superficieField.value = ""; // Réinitialise le champ si aucune option n'est sélectionnée
    }
  });
});

</script>